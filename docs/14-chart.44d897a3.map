{"version":3,"sources":["14-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","colorScale","scaleOrdinal","range","heightScale","scaleLinear","domain","xPositionScale","scaleBand","csv","require","then","ready","datapoints","names","map","d","name","selectAll","data","enter","hamburgers","animal","bandwidth","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","log"],"mappings":";;;CAEA,WAIMA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GAEjDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GAAGC,OAAO,YACjBC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAIjEQ,EAAaJ,GAAGK,eACjBC,MAAM,CAAC,UAAW,UAAW,YAE5BC,EAAcP,GAAGQ,cAClBC,OAAO,CAAC,EAAG,KACXH,MAAM,CAAC,EAAGR,IAETY,EAAiBV,GAAGW,YACrBL,MAAM,CAAC,EAAGT,IAEVe,GAAAA,IAAIC,QAAQ,sBACZC,KAKMC,SAAOC,GAGVC,IAAAA,EAAQD,EAAWE,IAAI,SAAUC,GAAYA,OAAAA,EAAEC,OAEpCX,EAAAA,OAAOQ,GAElBI,EAAAA,UAAU,QACXC,KAAKN,GACLO,QAAQrB,OAAO,QACfC,KAAK,SAAU,SAAUgB,GACjBZ,OAAAA,EAAYY,EAAEK,cAEtBrB,KAAK,OAAQ,SAAUgB,GACff,OAAAA,EAAWe,EAAEM,UAErBtB,KAAK,QAASO,EAAegB,aAC7BvB,KAAK,IAAK,SAAUgB,GACZrB,OAAAA,EAASS,EAAYY,EAAEK,cAE/BrB,KAAK,IAAK,SAAUgB,GACZT,OAAAA,EAAeS,EAAEC,QAGxBO,IAAAA,EAAQ3B,GAAG4B,SAASrB,GACpBL,EAAAA,OAAO,KACRC,KAAK,QAAS,eACd0B,KAAKF,GAEJG,IAAAA,EAAQ9B,GAAG+B,WAAWrB,GACtBR,EAAAA,OAAO,KACRC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C+B,KAAKC,KArCPE,MAAM,SAAUC,GACPC,QAAAA,IAAI,cAAeD,KA/BjC","file":"14-chart.44d897a3.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n\n(function () {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n\n  var margin = { top: 20, right: 20, bottom: 40, left: 70 }\n\n  var width = 600 - margin.left - margin.right\n  var height = 400 - margin.top - margin.bottom\n\n  var svg = d3.select('#chart14')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  // Build your scales here\n\n  var colorScale = d3.scaleOrdinal()\n    .range(['#FF6F91', '#FF9671', '#FFC75F'])\n\n  var heightScale = d3.scaleLinear()\n    .domain([0, 10])\n    .range([0, height])\n\n  var xPositionScale = d3.scaleBand()\n    .range([0, width])\n\n  d3.csv(require('./eating-data.csv'))\n    .then(ready)\n    .catch(function (err) {\n      console.log('Failed with', err)\n    })\n\n  function ready (datapoints) {\n    // Add and style your marks here\n\n    var names = datapoints.map(function (d) { return d.name })\n\n    xPositionScale.domain(names)\n\n    svg.selectAll('rect')\n      .data(datapoints)\n      .enter().append('rect')\n      .attr('height', function (d) {\n        return heightScale(d.hamburgers)\n      })\n      .attr('fill', function (d) {\n        return colorScale(d.animal)\n      })\n      .attr('width', xPositionScale.bandwidth())\n      .attr('y', function (d) {\n        return height - heightScale(d.hamburgers)\n      })\n      .attr('x', function (d) {\n        return xPositionScale(d.name)\n      })\n\n    var yAxis = d3.axisLeft(heightScale)\n    svg.append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    var xAxis = d3.axisBottom(xPositionScale)\n    svg.append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()\n"]}